#
# Clone a VM
#

#SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# The version below will return the script's dir even if called via symlink:
SCRIPT_DIR="$( cd "$( dirname $(readlink -f "${BASH_SOURCE[0]}") )" && pwd )"


srcvm=$1
targetvm=$2
vmdir=../machines
basefolder=${SCRIPT_DIR}/$vmdir

usage() {
    echo "Usage: clonevm  SRC_VM_NAME  NEW_VM_NAME  [--newmac | -n]";
    echo "";
    echo "  Surround VM names in quotes if they contain spaces.";
    echo "";
    echo "  -n, --newmac    Generate a new MAC for the network card. Default: no";
}


# Check for proper number of args.
expected_args=2
if [ $# -lt $expected_args ]
then
    usage
    exit 1
fi

if [ "$3X" == "--newmacX" ] || [ "$3X" == "-nX" ]; then
    newmac=yes
else
    newmac=no
fi

echo "Source VM: $srcvm"
echo "Target VM: $targetvm"
echo "newmac: $newmac"

if [ "$newmac" != "yes" ]; then
    macswitch="--options keepallmacs"
else
    macswitch=
fi
echo "macswitch: $macswitch"

echo "Cloning $srcvm to $targetvm"

VBoxManage clonevm "$srcvm" --mode all $macswitch --name "$targetvm" --basefolder "$basefolder" --register
retval=$?

if [ $retval -eq 0 ]; then
    echo "Clone completed"
else
    echo "Clone failed"
    exit 1
fi


